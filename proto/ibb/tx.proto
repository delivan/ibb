syntax = "proto3";
package sapienscosmos.ibb.ibb;

// this line is used by starport scaffolding # proto/tx/import
import "ibb/nft.proto";
import "ibb/user.proto";
import "ibb/borrow.proto";
import "ibb/deposit.proto";
import "ibb/pool.proto";

option go_package = "github.com/sapiens-cosmos/ibb/x/ibb/types";

// Msg defines the Msg service.
service Msg {
    // this line is used by starport scaffolding # proto/tx/rpc
  rpc MintNft(MsgMintNft) returns (MsgMintNftResponse);
  rpc CreateNft(MsgCreateNft) returns (MsgCreateNftResponse);
  rpc UpdateNft(MsgUpdateNft) returns (MsgUpdateNftResponse);
  rpc DeleteNft(MsgDeleteNft) returns (MsgDeleteNftResponse);
  rpc CreateRepay(MsgCreateRepay) returns (MsgCreateRepayResponse);
  rpc UpdateRepay(MsgUpdateRepay) returns (MsgUpdateRepayResponse);
  rpc DeleteRepay(MsgDeleteRepay) returns (MsgDeleteRepayResponse);
  rpc CreateWithdraw(MsgCreateWithdraw) returns (MsgCreateWithdrawResponse);
  rpc UpdateWithdraw(MsgUpdateWithdraw) returns (MsgUpdateWithdrawResponse);
  rpc DeleteWithdraw(MsgDeleteWithdraw) returns (MsgDeleteWithdrawResponse);
  rpc CreateUser(MsgCreateUser) returns (MsgCreateUserResponse);
  rpc UpdateUser(MsgUpdateUser) returns (MsgUpdateUserResponse);
  rpc DeleteUser(MsgDeleteUser) returns (MsgDeleteUserResponse);
  rpc CreateBorrow(MsgCreateBorrow) returns (MsgCreateBorrowResponse);
  rpc UpdateBorrow(MsgUpdateBorrow) returns (MsgUpdateBorrowResponse);
  rpc DeleteBorrow(MsgDeleteBorrow) returns (MsgDeleteBorrowResponse);
  rpc CreateDeposit(MsgCreateDeposit) returns (MsgCreateDepositResponse);
  rpc UpdateDeposit(MsgUpdateDeposit) returns (MsgUpdateDepositResponse);
  rpc DeleteDeposit(MsgDeleteDeposit) returns (MsgDeleteDepositResponse);
  rpc CreatePool(MsgCreatePool) returns (MsgCreatePoolResponse);
  rpc UpdatePool(MsgUpdatePool) returns (MsgUpdatePoolResponse);
  rpc DeletePool(MsgDeletePool) returns (MsgDeletePoolResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgMintNft {
  string creator = 1;
  string denomID = 2;
  string tokenID = 3;
  string tokenNm = 4;
  string tokenURI = 5;
  string tokenData = 6;
}

message MsgMintNftResponse {
}

message MsgCreateNft {
  string creator = 1;
  string collection = 2;
  string ownerAddress = 3;
  string imageUrl = 4;
  string name = 5;
}

message MsgCreateNftResponse {
  uint64 id = 1;
}

message MsgUpdateNft {
  string creator = 1;
  uint64 id = 2;
  string collection = 3;
  string ownerAddress = 4;
  string imageUrl = 5;
  string name = 6;
}

message MsgUpdateNftResponse { }

message MsgDeleteNft {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteNftResponse { }

message MsgCreateRepay {
  string creator = 1;
  int32 blockHeight = 2;
  string asset = 3;
  int32 amount = 4;
  string denom = 5;
}

message MsgCreateRepayResponse {
  uint64 id = 1;
}

message MsgUpdateRepay {
  string creator = 1;
  uint64 id = 2;
  int32 blockHeight = 3;
  string asset = 4;
  int32 amount = 5;
  string denom = 6;
}

message MsgUpdateRepayResponse { }

message MsgDeleteRepay {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteRepayResponse { }

message MsgCreateWithdraw {
  string creator = 1;
  int32 blockHeight = 2;
  string asset = 3;
  int32 amount = 4;
  string denom = 5;
}

message MsgCreateWithdrawResponse {
  uint64 id = 1;
}

message MsgUpdateWithdraw {
  string creator = 1;
  uint64 id = 2;
  int32 blockHeight = 3;
  string asset = 4;
  int32 amount = 5;
  string denom = 6;
}

message MsgUpdateWithdrawResponse { }

message MsgDeleteWithdraw {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteWithdrawResponse { }

message MsgCreateUser {
  string creator = 1;
  repeated bool collateral = 2;
  repeated Deposit deposit = 3;
  repeated Borrow borrow = 4;
  repeated int32 assetBalances = 5;
}

message MsgCreateUserResponse {
  uint64 id = 1;
}

message MsgUpdateUser {
  string creator = 1;
  uint64 id = 2;
  repeated bool collateral = 3;
  repeated Deposit deposit = 4;
  repeated Borrow borrow = 5;
  repeated int32 assetBalances = 6;
}

message MsgUpdateUserResponse { }

message MsgDeleteUser {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteUserResponse { }

message MsgCreateBorrow {
  string creator = 1;
  int32 blockHeight = 2;
  string asset = 3;
  int32 amount = 4;
  string denom = 5;
}

message MsgCreateBorrowResponse {
  uint64 id = 1;
}

message MsgUpdateBorrow {
  string creator = 1;
  uint64 id = 2;
  int32 blockHeight = 3;
  string asset = 4;
  int32 amount = 5;
  string denom = 6;
}

message MsgUpdateBorrowResponse { }

message MsgDeleteBorrow {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteBorrowResponse { }

message MsgCreateDeposit {
  string creator = 1;
  int32 blockHeight = 2;
  string asset = 3;
  int32 amount = 4;
  string denom = 5;
}

message MsgCreateDepositResponse {
  uint64 id = 1;
}

message MsgUpdateDeposit {
  string creator = 1;
  uint64 id = 2;
  int32 blockHeight = 3;
  string asset = 4;
  int32 amount = 5;
  string denom = 6;
}

message MsgUpdateDepositResponse { }

message MsgDeleteDeposit {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteDepositResponse { }

message MsgCreatePool {
  string creator = 1;
  string asset = 2;
  string denom = 3;
  int32 collatoralFactor = 4;
  int32 depositBalance = 5;
  int32 borrowBalance = 6;
  repeated User users = 8;
}

message MsgCreatePoolResponse {
  uint64 id = 1;
}

message MsgUpdatePool {
  string creator = 1;
  uint64 id = 2;
  string asset = 3;
  string denom = 4;
  int32 collatoralFactor = 5;
  int32 depositBalance = 6;
  int32 borrowBalance = 7;
  repeated User users = 9;
}

message MsgUpdatePoolResponse { }

message MsgDeletePool {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeletePoolResponse { }
